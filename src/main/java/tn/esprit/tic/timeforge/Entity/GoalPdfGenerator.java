package tn.esprit.tic.timeforge.Utils;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.properties.TextAlignment;
import tn.esprit.tic.timeforge.Entity.Goals;

import java.io.ByteArrayOutputStream;
import com.itextpdf.io.image.ImageDataFactory;

public class GoalPdfGenerator {

    public static byte[] generateGoalPdf(Goals goal) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PdfWriter writer = new PdfWriter(baos);
        PdfDocument pdfDoc = new PdfDocument(writer);
        Document document = new Document(pdfDoc);

        // Title
        document.add(new Paragraph("ðŸŽ¯ TimeForge Goal Report")
                .setBold().setFontSize(18).setTextAlignment(TextAlignment.CENTER));
        document.add(new Paragraph("Generated by TimeForge Platform\n\n")
                .setTextAlignment(TextAlignment.CENTER));

        // Add logo or any image if needed
        try {
            Image logo = new Image(ImageDataFactory.create("C:\\Users\\Lenovo\\Desktop\\download (2).png"));
            document.add(logo.setWidth(100).setHeight(100).setTextAlignment(TextAlignment.CENTER));
        } catch (Exception e) {
            // Handle logo/image exception if not found
            document.add(new Paragraph("Logo could not be loaded.").setItalic().setTextAlignment(TextAlignment.CENTER));
        }

        // Introduction
        document.add(new Paragraph("\nðŸŽ¯ Report Overview")
                .setBold().setFontSize(14));
        document.add(new Paragraph("This report summarizes the progress of the goal defined by the user in the TimeForge system.\n")
                .setFontSize(12));

        // Goal information as a table
        float[] columnWidths = {200f, 200f}; // Define column widths
        Table table = new Table(columnWidths);

        // Adding headers
        table.addCell(new Cell().add(new Paragraph("Title:").setBold()));
        table.addCell(new Cell().add(new Paragraph(goal.getTitle())));

        table.addCell(new Cell().add(new Paragraph("Description:").setBold()));
        table.addCell(new Cell().add(new Paragraph(goal.getDescription())));

        table.addCell(new Cell().add(new Paragraph("Start Date:").setBold()));
        table.addCell(new Cell().add(new Paragraph(goal.getStarDate().toString())));

        table.addCell(new Cell().add(new Paragraph("End Date:").setBold()));
        table.addCell(new Cell().add(new Paragraph(goal.getEndDate().toString())));

        // Add table to document
        document.add(table);

        // Add line break and extra info
        document.add(new Paragraph("\n\n"));
        document.add(new Paragraph("ðŸŽ¯ Notes: ")
                .setBold().setFontSize(14));
        document.add(new Paragraph("For internal use only. This report is based on data collected automatically from the TimeForge platform.\n" +
                "Do not distribute without permission."));

        // Footer
        document.add(new Paragraph("\n\nðŸŽ¯ TimeForge Â© 2025 | www.timeforge.app")
                .setTextAlignment(TextAlignment.CENTER).setFontSize(10));

        // Close the document
        document.close();

        // Return PDF as byte array
        return baos.toByteArray();
    }
}
